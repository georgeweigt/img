{KURSKYAN}

{------------------------------------}
{1.0. Kopf/Konstanten/Typen/Variablen}
{------------------------------------}
PROGRAM KURSKYAN;

CONST
  IK = 100; RK = 100.5; CK = 'P'; SK = 'Peeker';
TYPE
  STRING = ARRAY [1..6] OF CHAR;
VAR
  IV: INTEGER; RV: REAL; CV: CHAR; SV: STRING;
  IH: INTEGER; RH: REAL; CH: CHAR; SH: STRING;
  R:  CHAR;    T:  CHAR;

{-----------------------------------------}
{Diverse Assemblerroutinen}
{Ausfuehrlich kommentiert in Datei ASMKYAN}
{-----------------------------------------}
PROCEDURE HOME;
BEGIN
#A
    STX _T      ;Stets X in Temp ($0010) retten!
    JSR $FC58  ;HOME
    LDX _T      ;Nachher stets X wieder laden!
#
END;           {Ersetzt RTS}

PROCEDURE GOTOXY (X,Y: INTEGER);
BEGIN
#A
    STX _T       ;X-Register speichern
    LDY #5
    LDA (_SP),Y  ;YL: VTAB
    CMP #24
    BCS A1      ;groesser als 23!
    JSR $FB5B   ;TABV
    LDY #7
    LDA (_SP),Y  ;XL: HTAB
    CMP #80
    BCS A1      ;groesser als 79!
    STA $057B   ;XL: HTAB 0-79 - 80 Z/Z IIe/c
    STA $0024   ;XL: HTAB 0-23 - 40 Z/Z II+/e/c
A1  LDX _T       ;X-Register laden
#
END;            {Ersetzt RTS}

FUNCTION RDKEY: CHAR;
BEGIN
RDKEY := '1'; {Dummy}
#A
    STX _T       ;X-Register speichern
    JSR $FD0C   ;RDKEY: Tastaturabfrage
    AND #$7F    ;Bit 7 loeschen
    LDY #5
    STA (_SP),Y  ;in LL von C poken
    LDX _T       ;X-Register laden
#
END;            {Ersetzt RTS}

{-----------------------}
{2.1. Bildschirm-Ausgabe}
{-----------------------}
PROCEDURE BILDSCHIRMAUSGABE;
BEGIN
HOME; WRITELN; WRITELN (R);

WRITELN ('Hans', ' Meier');
WRITELN ('Hans', R, 'Meier', R);
WRITELN (CHR(15), 'Apostroph '' so', CHR(14), R);
WRITELN;
WRITE ('A'); WRITE ('-'); WRITELN ('B'); WRITELN;
RV := 12345.6789; WRITE (RV, '/', RV, '/', RV);

GOTOXY (29, 19); WRITE ('Hier');
GOTOXY (29, 18); WRITE ('Darueber');
GOTOXY (0,0); WRITE ('Oben links');
GOTOXY (0, 19); WRITELN ('Zeile 20')
END;

{-----------------}
{2.2. Formatierung}
{-----------------}
PROCEDURE FORMATIERUNG;
BEGIN
WRITELN ('AUSDRUCK:G:N', R);
RV := 123.456789;
WRITELN (RV, '/', RV:12:3, '/', RV:12:4, '/', RV:12:5);
RV := -RV;
WRITELN (RV, '/', RV:12:3, '/', RV:12:4, '/', RV:12:5);
WRITELN;

WRITELN (R, 'AUSDRUCK:G', R);
WRITELN ('Zehn', ' ':10, 'Spaces'); WRITELN;

IV := -1;
WRITELN (IV, '/', IV:6, '/', IV:7, '/', IV:8);
WRITELN;
WRITELN (SK, '/', SK:10, '/', SK:15, '/', SK:20)
END;

{--------------------}
{2.3. Wertzuweisungen}
{--------------------}
PROCEDURE WERTZUWEISUNG;
BEGIN
WRITELN ('''Literals''', R);
RV:= 765.432;  IV:= 765; CV:= 'Z';
WRITELN (RV);  WRITELN (IV); WRITELN (CV);

WRITELN (R, 'Konstanten', R);
RV:= RK; IV:= IK; CV:= CK; SV := SK;
WRITELN (RV, '/', IV, '/', CV, '/', SV);
Writeln ('Char-Konstante-Bug bemerkt?');
WRITELN (R, 'Systemkonstante MAXINT:', R);
IV:=  MAXINT; WRITELN (IV);
IV:= -MAXINT; WRITELN (IV)
END;

{---------------------}
{2.4. Tastatur-Eingabe}
{---------------------}
PROCEDURE TASTATUREINGABE;
BEGIN
WRITELN ('READLN fuer Char, String, Real, Int!', R);
WRITE (R, 'Char: '); READLN (CV); WRITELN (CV);
WRITE (R, 'String: '); READLN (SV); WRITELN (SV);
WRITE (R, 'Real: '); READLN (RV); WRITELN (RV);
WRITE (R, 'Integer: '); READLN (IV); WRITELN (IV);
WRITELN;

WRITE ('RDKEY: '); CV := RDKEY; WRITELN (CV);
END;

{-----------------------}
{2.5. Integer-Mathematik}
{-----------------------}
PROCEDURE INTEGERMATHE;
BEGIN
WRITELN ('+, - und *', R);
IV:= 10 + 20; WRITELN ('10 + 20 = ', IV:6);
IV:= 20 - 10; WRITELN ('20 - 10 = ', IV:6);
IV:= 10 * 10; WRITELN ('10 * 10 = ', IV:6);

WRITELN (R, 'Quotient und Rest: '); WRITE (IK);
WRITE (' geteilt durch '); IH:= 7; WRITE (IH);
WRITE (' = '); IV:= IK DIV IH; WRITE (IV);
WRITE (' Rest '); IV:= IK MOD IH;
WRITELN (IV);

WRITE (R, 'Absolutbetrag /-I/: ');
IH:= -7; IV:= ABS (IH);
WRITELN (IH, ' -> ', IV);

WRITE (R, 'Quadrat: I * I: ');
IH:= 20; IV:= SQR (IH);
WRITE ('Quadrat von ', IH);
WRITELN (' ist ', IV);

WRITE (R, 'Vorgaenger/Nachfolger: ');
IH:= 20; WRITE (IH); WRITE (': ');
WRITE ('Vorgaenger ', PRED (IH)); WRITE (', ');
WRITELN ('Nachfolger ', SUCC (IH));

WRITE (R, 'Runden: ');
RV:= -666.666; IV:= ROUND (RV);
WRITE ('Real ', RV);
WRITE (' auf Integer gerundet ', IV);
WRITELN (' und abgehackt ', TRUNC (RV))
END;

{---------------------------}
{2.6. Fliesskomma-Mathematik}
{---------------------------}
PROCEDURE FLIESSKOMMAMATHE;
BEGIN
RV:= 123.12345678; RH:= 123.12345678;
WRITELN (RV:12:6, ' + ', RH:12:6, ' = ', RV + RH:12:6);
WRITELN (RV:12:6, ' - ', RH:12:6, ' = ', RV - RH:12:6);
WRITELN (RV:12:6, ' * ', RH:12:6, ' = ', RV * RH:12:6);
WRITELN (RV:12:6, ' / ', RH:12:6, ' = ', RV / RH:12:6);
WRITELN;

WRITE ('X ^ Y = EXP (Y * LN (X)): ');
RV:= 3.0; RH:= 5.0;
WRITELN (RV, ' ^ ', RH, ' = ', EXP (RH * LN (RV)):6:2);
WRITELN;

WRITELN (R, 'Punkt vor Strich, Klammer vor alles', R);
WRITELN  (' 3 + 4  *  5 - 13  = ', 3 + 4  *  5 - 13);
WRITELN  ('(3 + 4) * (5 - 13) = ', (3 + 4) * (5 - 13));

WRITELN (R, 'Diverse Funktionen', R);
WRITE ('Von Ausgangszahl '); RV:= 5.6789;
WRITELN (RV:7:4, ' -> '); WRITELN
(' ABS: ', ABS  (RV):8:4,
 ' SQR: ', SQR  (RV):8:4,
 ' SQRT:', SQRT (RV):8:4,
 ' SIN: ', SIN  (RV):8:4, R,
 ' COS: ', COS  (RV):8:4,
 ' ATAN:', ARCTAN (RV):8:4,
 ' Tan: ', SIN  (RV)/COS (RV):8:4,
 ' EXP: ', EXP  (RV):8:4, R, 
 ' LN:  ', LN   (RV):8:4)
END;

{--------------------------------}
{2.7. Verzweigungen und Schleifen}
{--------------------------------}
PROCEDURE VERZWEIGUNGEN;
VAR IH: INTEGER;
BEGIN
WRITELN ('IF-Vergleiche:', R);
IF (1 = 1) AND (1 <> 2) THEN
BEGIN
 WRITE ('1 = 1 ja');
 WRITE (', ');
END
ELSE WRITE ('So?');
   IF NOT ((2 < 1) OR (1 > 2)) THEN
   WRITE ('2 < 1 nein, ') {kein ';'!}
   ELSE WRITE ('Ach?');
      IF ('B' > 'A') THEN
      WRITELN ('"B" > "A"')
      ELSE WRITELN ('Wie?');

WRITELN (R, 'FOR nur mit Integer-Step 1',
 R, 'Fuer Real-Step WHILE + REPEAT', R);
FOR IH:= 1 TO 5 DO
 WRITE (IH, ' * ', IH, ' = ', IH * IH, ', ');
WRITELN;
FOR IH:= 5 DOWNTO 1 DO
 WRITE (IH, ' + ', IH, ' = ', IH + IH, ', ');
WRITELN;

WRITELN (R, 'Version mit WHILE prueft vorher', R);
RH:= 0.5;
WHILE RH < 5.5 DO
BEGIN
 WRITE (RH:5:2, ' '); RH:= RH + 0.5;
END;
WRITELN;

WRITELN (R, 'Version mit REPEAT prueft nachher', R);
RH:= 0.5;
REPEAT
 WRITE (RH:5:2, ' '); RH:= RH + 0.5;
UNTIL RH >= 5.5;
WRITELN
END;

{------------------}
{3.0. Hauptprogramm}
{------------------}

BEGIN
R := CHR(13); {Return}

REPEAT

HOME;
WRITELN ('***** KYAN-KURS1 *****', R, R,
'1. Bildschirm-Ausgabe', R,
'2. Formatierte Ausgabe', R,
'3. Wertzuweisung', R,
'4. Tastatur-Eingabe', R,
'5. Integer-Mathematik', R,
'6. Fliesskomma-Mathematik', R,
'7. Verzweigungen und Schleifen', R,
'8. Ende', R);

T := ' '; WHILE (T < '1') OR (T > '8') DO T := RDKEY;

HOME;
IF T = '1' THEN BILDSCHIRMAUSGABE;
IF T = '2' THEN FORMATIERUNG;
IF T = '3' THEN WERTZUWEISUNG;
IF T = '4' THEN TASTATUREINGABE;
IF T = '5' THEN INTEGERMATHE;
IF T = '6' THEN FLIESSKOMMAMATHE;
IF T = '7' THEN VERZWEIGUNGEN;
IF T = '8' THEN WRITELN ('Ende...');

IF T <> '8' THEN BEGIN WRITELN; CH := RDKEY END

UNTIL T = '8';
END.
