PROCEDURE GRAFMODE;
BEGIN
#A
 LDA $C052
 LDA $C054
 LDA $C057
 LDA $C050
#
END;

PROCEDURE TEXTMODE;
BEGIN
#A
 LDA $C054
 LDA $C051
#
END;

PROCEDURE INITTURTLE;
BEGIN
#A
 LDA #139          ;CENTER TURTLEX
 STA TTX
 LDA #95           ;TURTLEY
 STA TTY
 LDA #8            ;PENCOLOR=NONE
 STA TPC
 LDA #191
 STA TVB           ;VIEWPORT BOTTOM
 LDA #>279
 STA TVR
 LDA #<279         ;VIEWPORT RIGHT           
 STA TVR+1
 LDA #$20          ;START OF DISPLAY MEM
 STA _T+1
 LDA #32           ;PAGE COUNTER
 STA _T+2
 LDA #0
 STA TTX+1         ;MSBS OF VARIABLES
 STA TTY+1
 STA TTA           ;TURTLE ANGLE
 STA TTA+1
 STA TVL           ;VIEWPORT LEFT 
 STA TVL+1
 STA TVB+1
 STA TVT           ;VIEWPORT TOP
 STA TVT+1
 STA _T
 TAY
ITL1 STA (_T),Y
 INY
 BNE ITL1
 INC _T+1
 DEC _T+2
 BNE ITL1
 LDA $C052
 LDA $C054
 LDA $C057
 LDA $C050
#
END; 
#A
TTX DS 2
TTY DS 2
TTA DS 2
TVB DS 2
TVT DS 2
TVR DS 2
TVL DS 2
TPC DS 1
#

FUNCTION LOADHIRES(VAR PATHNAME:PATHSTRING):INTEGER;
VAR RESULT:INTEGER;
BEGIN
#A
 STX _T
 LDY #9
 JSR MAKEPATH
 LDA _T+2
 STA LHRINFO+1
 LDA _T+3
 STA LHRINFO+2
 LDA #10
 STA LHRINFO
 JSR _MLI
 DB  $C4        ;GET_FILE_INFO
 DW  LHRINFO
 BNE LHR9
 LDA LHRINFO+4
 CMP #6         ;BIN?
 BEQ LHR1
 LDA #$4B
 BNE LHR9
;
LHR1 EQU *
 JSR FIND_OPEN
 STA LHRINFO+3
 STY LHRINFO+4
 LDA #3
 STA LHRINFO
 JSR _MLI
 DB  $C8        ;OPEN
 DW  LHRINFO
 BNE LHR8
 LDA LHRINFO+5
 STA LHREAD+1
 JSR _MLI
 DB  $CA
 DW  LHREAD
 PHA
 LDA LHREAD+1
 JSR CLOSE_FILE
 PLA
LHR8 EQU *
 PHA
 JSR FREE_OPEN
 PLA
LHR9 EQU *
 LDY #5
 STA (_SP),Y
 INY
 LDA #0
 STA (_SP),Y
 JSR RESTPATH
 LDX _T
#
 LOADHIRES := RESULT
END;
#A
LHREAD DB 4,0
 DW $2000,$2000,0
LHRINFO DB 10
 DS 17
;
 IFNDEF MAKEPATH
MAKEPATH EQU *
 LDA (_SP),Y    ;ADDRESS OF STRING ADDRESS
 STA _T+2
 INY
 LDA (_SP),Y
 STA _T+3
 LDY #64
MPTH1 LDA (_T+2),Y
 CMP #$20       ;SPACE?
 BNE MPTH2      ;NO. FOUND LAST CHAR OF PATHNAME
 DEY
 BPL MPTH1
 INY            ;Y=0
 TYA
 STA (_T+2),Y   ;MAKE LENGTH ZERO
 RTS
MPTH2 INY       ;PATH LENGTH
 STY PLENX
 DEY
MPTH3 LDA (_T+2),Y
 INY
 STA (_T+2),Y    ;MOVE STRING FORWARD ONE BYTE
 DEY
 DEY
 BPL MPTH3
 INY            ;Y=0
 LDA PLENX
 STA (_T+2),Y
 RTS
PLENX DS 1
 ENDIF
;
 IFNDEF RESTPATH
RESTPATH EQU *  ;RESTORE PATH @(_T+2)
 LDY #0
 LDA (_T+2),Y   ;LENGTH
 STA PLENX
 INY
RPTH1 LDA (_T+2),Y
 DEY
 STA (_T+2),Y   ;MOVE STRING BACK ONE BYTE
 INY
 INY
 DEC PLENX
 BPL RPTH1
 RTS
 ENDIF
;
;
;
 IFNDEF FIND_OPEN
FIND_OPEN EQU * ;ALLOCATE OPEN FILE BUFFER
 LDX _T
 DEX
 DEX
 LDA #>OPENSAFE
 STA 0,X
 LDA #<OPENSAFE
 STA 1,X
 LDA #>1279
 LDY #<1279
 JSR _LIB+$117
 LDA OPENSAFE+1
 STA OPENADR+1
 LDA OPENSAFE
 STA OPENADR
 BEQ ALCOP9     ;BUFFER ON PAGE BOUNDARY
 INC OPENADR+1
 LDA #0
 STA OPENADR
ALCOP9 EQU *    ;A IS ALWAYS ZERO
 LDY OPENADR+1
 STX _T
 RTS            ;RETURN WITH BUFFER @(A,Y)
OPENADR  DW 0   ;ADDRESS OF BUFFER ON PAGE BOUNDARY
OPENSAFE DW 0   ;ADDRESS OF ACTUAL BUFFER START FOR DISPOSE
;
FREE_OPEN EQU *  ;FREE OPEN BUFFER FROM GLOBAL
 LDX _T
 DEX
 DEX
 LDA #>OPENSAFE
 STA 0,X
 LDA #<OPENSAFE
 STA 1,X
 JSR _LIB+$114
 STX _T
 RTS
;
CLOSE_FILE EQU *
 STA CL_XTRA+1
 JSR _MLI
 DB  $CC
 DW  CL_XTRA
 RTS
CL_XTRA DB 1,0
 ENDIF
#

FUNCTION SAVEHIRES(VAR PATHNAME:PATHSTRING):INTEGER;
VAR RESULT:INTEGER;
BEGIN
#A
 STX _T
 LDY #9
 JSR MAKEPATH
 LDA #1
 STA _T+1
 JSR _MLI
 DB  $C1        ;DESTROY
 DW  _T+1
 BEQ SHR1
 CMP #$46       ;FILE NOT FOUND?
 BNE SHR9
;
SHR1 EQU *
 LDA _T+2
 STA SHRCRT+1
 STA SHROPEN+1
 LDA _T+3
 STA SHRCRT+2
 STA SHROPEN+2
 JSR _MLI
 DB  $C0        ;CREATE
 DW  SHRCRT
 BNE SHR9
;
 JSR FIND_OPEN
 STY SHROPEN+4
 JSR _MLI
 DB  $C8        ;OPEN
 DW  SHROPEN
 BNE SHR8
 LDA SHROPEN+5
 STA SHRWRT+1
 JSR _MLI
 DB  $CB        ;WRITE
 DW  SHRWRT
 PHA
 LDA SHRWRT+1
 JSR CLOSE_FILE
 PLA
SHR8 EQU *
 PHA
 JSR FREE_OPEN
 PLA
SHR9 EQU *
 LDY #5
 STA (_SP),Y
 INY
 LDA #0
 STA (_SP),Y
 JSR RESTPATH
 LDX _T
#
 SAVEHIRES := RESULT
END;
#A
SHRCRT DB 7
 DW 0
 DB $C3,6
 DW $2000
 DB 1
 DW 0,0
SHRWRT DB 4,0
 DW $2000,$2000,0
SHROPEN DB 3
 DW 0,0,0
;
 IFNDEF MAKEPATH
MAKEPATH EQU *
 LDA (_SP),Y    ;ADDRESS OF STRING ADDRESS
 STA _T+2
 INY
 LDA (_SP),Y
 STA _T+3
 LDY #64
MPTH1 LDA (_T+2),Y
 CMP #$20       ;SPACE?
 BNE MPTH2      ;NO. FOUND LAST CHAR OF PATHNAME
 DEY
 BPL MPTH1
 INY            ;Y=0
 TYA
 STA (_T+2),Y   ;MAKE LENGTH ZERO
 RTS
MPTH2 INY       ;PATH LENGTH
 STY PLENX
 DEY
MPTH3 LDA (_T+2),Y
 INY
 STA (_T+2),Y    ;MOVE STRING FORWARD ONE BYTE
 DEY
 DEY
 BPL MPTH3
 INY            ;Y=0
 LDA PLENX
 STA (_T+2),Y
 RTS
PLENX DS 1
 ENDIF
;
 IFNDEF RESTPATH
RESTPATH EQU *  ;RESTORE PATH @(_T+2)
 LDY #0
 LDA (_T+2),Y   ;LENGTH
 STA PLENX
 INY
RPTH1 LDA (_T+2),Y
 DEY
 STA (_T+2),Y   ;MOVE STRING BACK ONE BYTE
 INY
 INY
 DEC PLENX
 BPL RPTH1
 RTS
 ENDIF
;
;
;
 IFNDEF FIND_OPEN
FIND_OPEN EQU * ;ALLOCATE OPEN FILE BUFFER
 LDX _T
 DEX
 DEX
 LDA #>OPENSAFE
 STA 0,X
 LDA #<OPENSAFE
 STA 1,X
 LDA #>1279
 LDY #<1279
 JSR _LIB+$117
 LDA OPENSAFE+1
 STA OPENADR+1
 LDA OPENSAFE
 STA OPENADR
 BEQ ALCOP9     ;BUFFER ON PAGE BOUNDARY
 INC OPENADR+1
 LDA #0
 STA OPENADR
ALCOP9 EQU *    ;A IS ALWAYS ZERO
 LDY OPENADR+1
 STX _T
 RTS            ;RETURN WITH BUFFER @(A,Y)
OPENADR  DW 0   ;ADDRESS OF BUFFER ON PAGE BOUNDARY
OPENSAFE DW 0   ;ADDRESS OF ACTUAL BUFFER START FOR DISPOSE
;
FREE_OPEN EQU *  ;FREE OPEN BUFFER FROM GLOBAL
 LDX _T
 DEX
 DEX
 LDA #>OPENSAFE
 STA 0,X
 LDA #<OPENSAFE
 STA 1,X
 JSR _LIB+$114
 STX _T
 RTS
;
CLOSE_FILE EQU *
 STA CL_XTRA+1
 JSR _MLI
 DB  $CC
 DW  CL_XTRA
 RTS
CL_XTRA DB 1,0
 ENDIF
#

PROCEDURE VIEWPORT(XMIN,XMAX,YMIN,YMAX:INTEGER);
BEGIN
#A
 STX _T
 LDY #5            ;YMAX
 JSR V191
 LDY #7            ;YMIN
 JSR V191
 LDY #9            ;XMAX
 JSR V279
 LDY #11           ;XMIN
 JSR V279
;
 LDY #12           ;COPY PARMS TO VAR AREA
 LDX #7
VCOPY LDA (_SP),Y
 STA TVB,X
 DEY
 DEX
 BPL VCOPY
;
 LDA TVB
 CMP TVT
 LDA TVB+1
 SBC TVT+1         ;IS BOTTOM >= TOP?
 BCS VP2           ;BRANCH IF NO SWAP NEEDED
 LDA TVB
 PHA
 LDA TVB+1
 PHA
 LDA TVT           ;SWAP TOP AND BOTTOM SO THAT
 STA TVB           ;TOP IS <= BOTTOM
 LDA TVT+1
 STA TVB+1
 PLA
 STA TVT+1
 PLA
 STA TVT
;
VP2 LDA TVR
 CMP TVL
 LDA TVR+1
 SBC TVL+1         ;IS RIGHT >= LEFT?
 BCS VP9           ;YES : ALL DONE
;
 LDA TVR           ;ELSE SWAP TOP AND BOTTOM
 PHA
 LDA TVR+1
 PHA
 LDA TVL
 STA TVR
 LDA TVL+1
 STA TVR+1
 PLA
 STA TVL+1
 PLA
 STA TVL
;
VP9 LDX _T
#
END;
#A
V191 LDA(_SP),Y
 CMP #>192
 INY
 LDA (_SP),Y       ;Y PARM IN [0...191]
 SBC #<192
 BCS VP4           ;NO. POP RETADR AND GET OUT
 RTS
;
V279 LDA (_SP),Y
 CMP #>280
 INY
 LDA (_SP),Y
 SBC #<280
 BCS VP4           ;TAKEN IF X PARM >= 280
 RTS
;
VP4 PLA            ;POP RETURN ADDRESS
 PLA
 JMP VP9
#

PROCEDURE FULLPORT;
BEGIN
 VIEWPORT(0,279,0,191)
END;

FUNCTION TURTLEX:INTEGER;
VAR RESULT:INTEGER;
BEGIN
#A
 LDY #5
 LDA TTX
 STA (_SP),Y
 INY
 LDA TTX+1
 STA (_SP),Y
#
 TURTLEX := RESULT
END;

FUNCTION TURTLEY:INTEGER;
VAR RESULT:INTEGER;
BEGIN
#A
 LDY #5
 LDA TTY
 STA (_SP),Y
 INY
 LDA TTY+1
 STA (_SP),Y
#
 TURTLEY := RESULT
END;

FUNCTION TURTLEANG:INTEGER;
VAR RESULT:INTEGER;
BEGIN
#A
 LDY #5
 LDA TTA
 STA (_SP),Y
 INY
 LDA TTA+1
 STA (_SP),Y
#
 TURTLEANG := RESULT
END;

PROCEDURE PENCOLOR(COLOR:COLORTYPE);
BEGIN
#A
 LDY #5
 LDA (_SP),Y
 STA TPC
# 
END;

PROCEDURE TURN(ANGLE:INTEGER);
VAR TEMP:INTEGER;
BEGIN
 TEMP := (TURTLEANG+ANGLE+360) MOD 360;
#A
 LDY #5
 LDA ( _SP),Y
 STA TTA
 INY
 LDA (_SP),Y
 STA TTA+1
#
END;
 
PROCEDURE TURNTO(ANGLE:INTEGER);
VAR TEMP:INTEGER;
BEGIN
 TEMP:=((ANGLE+360) MOD 360);
#A
 LDY #5            ;GET TEMP FROM STACK
 LDA (_SP),Y
 STA TTA
 INY
 LDA (_SP),Y
 STA TTA+1
#
END;

PROCEDURE FILLPORT(COLOR:COLORTYPE);
VAR EXTRASTACKSPACE:ARRAY[1..3] OF BOOLEAN;
BEGIN
#A
 STX _T
 LDY #8
 LDA (_SP),Y
 CMP #8
 BNE *+5
 JMP FPT9
 PHA
 LDA TPC
 STA _T+1
 PLA
 STA TPC
;
 JSR FPTIX      ;INSTALL LEFTMOST
 LDY #5
 LDA TVT        ;AND TOPMOST PIXEL
 STA (_SP),Y
 INY
 LDA TVT+1
 STA (_SP),Y
;
FPT1 JSR PLOTXY
 LDY #7
 LDA (_SP),Y
 CMP TVR
 INY
 LDA (_SP),Y
 SBC TVR+1
 BCC FPT6
;REACHED RIGHT MARGIN:CHECK Y NOW
FPT5 JSR FPTIX  ;PUT IN ORIGINAL X
 LDY #5         ;CHECK IF DONE WITH Y ALSO
 LDA (_SP),Y
 CMP TVB
 INY
 LDA (_SP),Y
 SBC TVB+1
 BCS FPT8       ;DONE
FPT6 DEY        ;INCREMENT TO NEXT POSITION
 LDA (_SP),Y
 TAX
 INX
 TXA
 STA (_SP),Y
 BNE FPT1
 INY
 LDA (_SP),Y
 TAX
 INX
 TXA
 STA (_SP),Y
 JMP FPT1
;
FPT8 LDA _T+1
 STA TPC
FPT9 LDX _T
#
END;
#A
FPTIX EQU *
 LDY #7         ;START WITH LEFTMOST
 LDA TVL
 STA (_SP),Y
 INY
 LDA TVL+1
 STA (_SP),Y
 RTS
#

PROCEDURE MOVETO(X,Y:INTEGER);
BEGIN
#A
J EQU 20
I EQU 22
DX EQU 24
DY EQU 26
XDIR EQU 28
YDIR EQU 30
;
 LDY #5
 LDA (_SP),Y
 STA YDEST
 INY
 LDA (_SP),Y
 STA YDEST+1
 INY
 LDA (_SP),Y
 STA XDEST
 INY
 LDA (_SP),Y
 STA XDEST+1
 LDA TPC
 CMP #8
 BNE *+5
 JMP MVTOEX
;
 SEC
 LDY #7
 LDA (_SP),Y
 SBC TTX
 STA DX
 LDY #8
 LDA (_SP),Y
 SBC TTX+1
 STA DX+1
;
 SEC
 LDY #5
 LDA (_SP),Y
 SBC TTY
 STA DY
 LDY #6
 LDA (_SP),Y
 SBC TTY+1
 STA DY+1
;
 LDA #>1
 STA XDIR
 LDA #<1
 STA XDIR+1
 LDA DX+1
 BPL MVTO1
 SEC
 LDA #0
 SBC DX
 STA DX
 LDA #0
 SBC DX+1
 STA DX+1
 LDA #>-1
 STA XDIR
 LDA #<-1
 STA XDIR+1
;
MVTO1 LDA #>1
 STA YDIR
 LDA #<1
 STA YDIR+1
 LDA DY+1
 BPL MVTO2
 SEC
 LDA #0
 SBC DY
 STA DY
 LDA #0
 SBC DY+1
 STA DY+1
 LDA #>-1
 STA YDIR
 LDA #<-1
 STA YDIR+1
;
MVTO2 LDY #7
 LDA TTX
 STA (_SP),Y
 INY
 LDA TTX+1
 STA (_SP),Y
 LDY #5
 LDA TTY
 STA (_SP),Y
 INY
 LDA TTY+1
 STA (_SP),Y
;
 LDA DX
 CMP DY
 LDA DX+1
 SBC DY+1
 BCS *+5
 JMP MVTO3
;
 LDA DX+1
 STA I+1
 LSR
 STA J+1
 LDA DX
 STA I
 ROR
 STA J
;
MVTO4 LDA J
 CMP DX
 LDA J+1
 SBC DX+1
 BCC MVTO5
;
 SEC
 LDA J
 SBC DX
 STA J
 LDA J+1
 SBC DX+1
 STA J+1
;
 CLC
 LDY #5
 LDA (_SP),Y
 ADC YDIR
 STA (_SP),Y
 INY
 LDA (_SP),Y
 ADC YDIR+1
 STA (_SP),Y
;
MVTO5 CLC
 LDA J
 ADC DY
 STA J
 LDA J+1
 ADC DY+1
 STA J+1
;
 JSR PLOT
;
 CLC
 LDY #7
 LDA (_SP),Y
 ADC XDIR
 STA (_SP),Y
 INY
 LDA (_SP),Y
 ADC XDIR+1
 STA (_SP),Y
;
 CLC
 LDA I
 ADC #>-1
 STA I
 LDA I+1
 ADC #<-1
 STA I+1
 BPL MVTO4
MVTOEX EQU *
 LDA YDEST
 STA TTY
 LDA YDEST+1
 STA TTY+1
 LDA XDEST
 STA TTX
 LDA XDEST+1
 STA TTX+1
#
END;
#A
MVTO3 LDA DY+1
 STA I+1
 LSR
 STA J+1
 LDA DY
 STA I
 ROR
 STA J
;
MVTO6 LDA J
 CMP DY
 LDA J+1
 SBC DY+1
 BCC MVTO7
;
 SEC
 LDA J
 SBC DY
 STA J
 LDA J+1
 SBC DY+1
 STA J+1
;
 CLC
 LDY #7
 LDA (_SP),Y
 ADC XDIR
 STA (_SP),Y
 INY
 LDA (_SP),Y
 ADC XDIR+1
 STA (_SP),Y
;
MVTO7 CLC
 LDA J
 ADC DX
 STA J
 LDA J+1
 ADC DX+1
 STA J+1
;
 JSR PLOT
;
 CLC
 LDY #5
 LDA (_SP),Y
 ADC YDIR
 STA (_SP),Y
 INY
 LDA (_SP),Y
 ADC YDIR+1
 STA (_SP),Y
;
 CLC
 LDA I
 ADC #>-1
 STA I
 LDA I+1
 ADC #<-1
 STA I+1
 BPL MVTO6
 JMP MVTOEX
;
;
;
PLOT EQU *
 LDY #7
 LDA (_SP),Y
 CMP TVL
 INY
 LDA (_SP),Y
 SBC TVL+1
 BCS *+5
 JMP PLOT3   ;X < LEFTPORT
;
 LDY #5
 LDA (_SP),Y
 CMP TVT
 INY
 LDA (_SP),Y
 SBC TVT+1
 BCC PLOT3   ;Y < TOPPORT
;
 LDY #7
 LDA TVR
 CMP (_SP),Y
 INY
 LDA TVR+1
 SBC (_SP),Y
 BCC PLOT3   ;X > RIGHTPORT
;
 LDA TVB
 LDY #5
 CMP (_SP),Y
 INY
 LDA TVB+1
 SBC (_SP),Y
 BCC PLOT3   ;Y > BOTTOMPORT
;
PLOTXY EQU *
 LDY #5
 LDA (_SP),Y
 AND #$F8
 LSR
 LSR
 TAY
 LDA PLOT10,Y
 STA _T
 INY
 LDA PLOT10,Y
 STA _T+1
 LDY #5
 LDA (_SP),Y
 AND #7
 ASL
 ASL
 ADC _T+1
 STA _T+1
 LDY #7
 LDA (_SP),Y
 STA _T+2
 INY
 LDA (_SP),Y
 LDY #8
PLOT1 ASL _T+2
 ROL
 CMP #7
 BCC PLOT2
 SBC #7
 INC _T+2
PLOT2 DEY
 BNE PLOT1
 TAY
 LDA PLOT11,Y
 STA _T+3
 JMP DOCOLOR
PLOT3 RTS
;
;
;
DOCOLOR LDA TPC
 BNE COLR10
 LDA _T+3 ;BLACK
 EOR #$FF
 LDY _T+2
 AND (_T),Y
 STA (_T),Y
 ASL _T+3
 BPL COLR01
 LDA #1
 STA _T+3
 INY
 CPY #40
 BEQ COLR02
COLR01 LDA _T+3
 EOR #$FF
 AND (_T),Y
 STA (_T),Y
COLR02 RTS
COLR10 CMP #1 ;GREEN
 BNE COLR20
 LDY #7
 LDA (_SP),Y
 AND #1
 BEQ COLR11
 LDY _T+2
 LDA (_T),Y
 AND #$7F
 ORA _T+3
 STA (_T),Y
COLR11 RTS
COLR20 CMP #2 ;VIOLET
 BNE COLR30
 LDY #7
 LDA (_SP),Y
 AND #1
 BNE COLR21
 LDY _T+2
 LDA (_T),Y
 AND #$7F
 ORA _T+3
 STA (_T),Y
COLR21 RTS
COLR30 CMP #3 ;RED
 BNE COLR40
 LDY #7
 LDA (_SP),Y
 AND #1
 BEQ COLR31
 LDY _T+2
 LDA (_T),Y
 ORA #$80
 ORA _T+3
 STA (_T),Y
COLR31 RTS
COLR40 CMP #4 ;BLUE
 BNE COLR50
 LDY #7
 LDA (_SP),Y
 AND #1
 BNE COLR41
 LDY _T+2
 LDA (_T),Y
 ORA #$80
 ORA _T+3
 STA (_T),Y
COLR41 RTS
COLR50 CMP #5 ;WHITE
 BNE COLR60
 LDY _T+2
 LDA (_T),Y
 ORA _T+3
 STA (_T),Y
 ASL _T+3
 BPL COLR51
 LDA #1
 STA _T+3
 INY
 CPY #40
 BEQ COLR52
COLR51 LDA (_T),Y
 ORA _T+3
 STA (_T),Y
COLR52 RTS
COLR60 CMP #6
 BNE COLR70
 LDA _T+3
 LDY _T+2
 ORA (_T),Y
 STA (_T),Y
 RTS
COLR70 CMP #7
 BNE COLR80
 LDA _T+3
 EOR #$FF
 LDY _T+2
 AND (_T),Y
 STA (_T),Y
 RTS
COLR80 RTS
;
PLOT10 EQU *
 DW 8192,8320,8448,8576,8704,8832
 DW 8960,9088,8232,8360,8488,8616
 DW 8744,8872,9000,9128,8272,8400
 DW 8528,8656,8784,8912,9040,9168
PLOT11 DB 1,2,4,8,16,32,64
;
XDEST DS 2
YDEST DS 2
#

PROCEDURE MOVE(DISTANCE:INTEGER);
CONST RADCONV=0.017453;
VAR X,Y:INTEGER;
BEGIN
 X :=  TURTLEX + ROUND(DISTANCE * COS(TURTLEANG*RADCONV));
 Y :=  TURTLEY + ROUND(DISTANCE * SIN((360-TURTLEANG)*RADCONV));
 MOVETO(X,Y)
END;

PROCEDURE FILLAREA(X,Y,PATTERN:INTEGER);
BEGIN
#A
 STX _T
 LDY #8
 LDA (_SP),Y
 BNE FA9
 DEY
 LDA (_SP),Y
 CMP #192
 BCS FA9
 STA Y0
 STA Y1
 LDY #9
 LDA (_SP),Y
 STA X0
 STA X1
 CMP #>280
 INY
 LDA (_SP),Y
 STA X0+1
 STA X1+1
 SBC #<280
 BCC FA0
FA9 LDX _T
#
END;
#A
FA0 EQU *
 LDY #5
 LDA (_SP),Y
 ASL
 ASL
 ASL
 STA CSHIFT
 LDA X0
 LDY X0+1
 JSR FAH
 LDA Y1
 JSR FAV
 LDY FAM2
 LDA (_T+1),Y
 AND #$80
 BIT FAM0
 BEQ FA1
 EOR #$FF
 BIT FAM0
 BEQ FA2
 BNE FA9
;
FA1 EQU *
 JSR FA3
 LDX #0
 LDA (_T+1),Y
 BPL FA4A
 INX
 BPL FA4A
;
FA2 EQU *
 JSR FA4
 LDX #2
 LDA (_T+1),Y
 BPL FA4A
 INX
;
FA4A EQU *
 LDA FAPT,X
 STA FAPATN
 LDA Y1
FA61 JSR FAV
 LDY FAM2
 LDA (_T+1),Y
FAX1 EOR #$FF
 BIT FAM0
 BNE FDONE
 JSR FALINE
 DEC Y1
 LDA Y1
 CMP #$FF
 BNE FA61
FDONE LDY Y0
 INY
 STY Y1
 TYA
FA62 JSR FAV
 LDY FAM2
 LDA (_T+1),Y
FAX2 EOR #$FF
 BIT FAM0
 BNE FDONE1
 JSR FALINE
 INC Y1
 LDA Y1
 CMP #192
 BNE FA62
FDONE1 JMP FA9
;
FAH EQU *
 PHA
 AND #1
 STA _T+4
 LDX #0
 TYA
 BEQ FAL1
 LDY #4
 LDX #36
FAL1 STY FAM0
 CLC
 PLA
 ADC FAM0
 STA TEMP
 SEC
 SBC #126
 BCC FAL2
 STA TEMP
 TXA
 SEC
 ADC #17
 TAX
FAL2 LDA TEMP
 SEC
FAL3 BEQ FAL4
 INX
 SBC #7
 BCS FAL3
 DEX
 ADC #7
FAL4 STX FAM2
 TAX
 LDA TABLE,X
 STA FAM0
 EOR #$FF
 STA FAM1
 LDA TAB2,X
 STA _T+9
 RTS
;
FALINE EQU *
 STY _T+8
 LDA #$7F
 STA _T+11
 LDA _T+9
 STA _T+10
 LDA (_T+1),Y
 JSR FAX4
 LDY _T+8
 LDA (_T+1),Y
FAX3 ORA FAM0
 STA (_T+1),Y
 LDA #$7F
 STA _T+11
 LDA _T+9
 STA _T+10
 LSR _T+10
 JSR RGT
 RTS
;
FA3 EQU *
 LDA NOPHEX
 STA FAX1
 STA FAX1+1
 STA FAX2
 STA FAX2+1
 LDA ANDHEX
 STA FAX3
 LDA ANDHEX+1
 STA FAX3+1
 LDA ANDHEX+2
 STA FAX3+2
 LDA EORHEX
 STA FAX4
 STA FAX5
 LDA EORHEX+1
 STA FAX4+1
 STA FAX5+1
 RTS
;
FA4 EQU *
 LDA EORHEX
 STA FAX1
 STA FAX2
 LDA EORHEX+1
 STA FAX1+1
 STA FAX2+1
 LDA ORAHEX
 STA FAX3
 LDA ORAHEX+1
 STA FAX3+1
 LDA ORAHEX+2
 STA FAX3+2
 LDA NOPHEX
 STA FAX4
 STA FAX5
 STA FAX4+1
 STA FAX5+1
 RTS
;
NOPHEX DB $EA
EORHEX EOR #$FF
ANDHEX AND FAM1
ORAHEX ORA FAM0
;
FCLR EQU *
 LDA (_T+1),Y
 AND _T+11
 STA TEMP2
 LDA _T+11
 CMP #$7F
 BEQ CLF4
 EOR #$FF
 STA TEMP3
 LDA Y1
 AND #1
 ASL
 ASL
 STA TEMP4
 TYA
 AND #3
 CLC
 ADC TEMP4
 STA TEMP4
 LDA CSHIFT
 CLC
 ADC TEMP4
 TAX
 LDA CPTABLE,X
 STA FACLR
 LDA TEMP3
 AND FACLR
 ORA TEMP2
 STA (_T+1),Y
CLF4 RTS
;
LFT EQU *
 LDA (_T+1),Y
 CMP FAPATN
 BEQ CHNGALL
FAX4 EOR #$FF
LPLFT BIT _T+10
 BEQ DONLFT
 TAX
 LDA _T+11
 EOR _T+10
 STA _T+11
 TXA
 LSR _T+10
 BNE LPLFT
 NOP
 BEQ LFTBK
CHNGALL LDA #0
 STA _T+11
LFTBK JSR FCLR
 LDA LBITL
 STA _T+10
 LDA #$7F
 STA _T+11
 DEY
 BPL LFT
 RTS
DONLFT JSR FCLR
 RTS
;
RGT EQU *
 LDY _T+8
RGT1 LDA (_T+1),Y
 CMP FAPATN
 BEQ CHGAL2
FAX5 EOR #$FF
RGT2 BIT _T+10
 BEQ RGT3
 TAX
 LDA _T+11
 EOR _T+10
 STA _T+11
 TXA
 ASL _T+10
 BPL RGT2
 BMI RGT4
CHGAL2 LDA #0
 STA _T+11
RGT4 JSR FCLR
 LDA LBITR
 STA _T+10
 LDA #$7F
 STA _T+11
 INY
 CPY #40
 BNE RGT1
 RTS
RGT3 JSR FCLR
 RTS
;
FAV EQU *
 LDX #0
 STA _T+1
 BIT _T+1
 BPL SKX1
 LDX #$A0
SKX1 BVC SKX2
 LDX #$50
SKX2 STX _T+1
 TAX
 AND #7
 ASL
 ASL
 ADC #$20
 STA _T+2
 TXA
 ROR
 ROR
 ROR
 ROR
 ROR _T+1
 AND #3
 ADC _T+2
 STA _T+2
 RTS
;
X0 DS 2
Y0 DS 1
X1 DS 2
Y1 DS 1
FAPATN DB $FF,0
TAB2 DB 2,2,4,8,16,32
LBITL DB 64
LBITR DB 1
TABLE DB 3,3,6,12,24,48,96
FAPT DB 0,128,127,255
TEMP  DS 1
TEMP2 DS 1
TEMP3 DS 1
TEMP4 DS 1
FACLR DS 1
CSHIFT DS 1
;
CPTABLE EQU *
 DW 0,0,0,0
 DB $80,$80,$80,$80,$80,$80,$80,$80
 DB $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF
 DB $7F,$7F,$7F,$7F,$7F,$7F,$7F,$7F
 DB $2A,$55,$2A,$55,$2A,$55,$2A,$55
 DB $AA,$D5,$AA,$D5,$AA,$D5,$AA,$D5
 DB $55,$2A,$55,$2A,$55,$2A,$55,$2A
 DB $D5,$AA,$D5,$AA,$D5,$AA,$D5,$AA
 DB $33,$66,$4C,$19,$4C,$19,$33,$66
 DB $B3,$E6,$CC,$99,$CC,$99,$B3,$E6
 DB $22,$44,$08,$11,$08,$11,$22,$44
 DB $A2,$C4,$88,$91,$88,$91,$A2,$C4
 DB $11,$22,$44,$08,$44,$08,$11,$22
 DB $91,$A2,$C4,$88,$C4,$88,$91,$A2
 DB $6E,$5D,$3B,$77,$3B,$77,$6E,$5D
 DB $EE,$DD,$BB,$F7,$BB,$F7,$EE,$DD
 DB $5D,$3B,$77,$6E,$77,$6E,$5D,$3B
 DB $DD,$BB,$F7,$EE,$F7,$EE,$DD,$BB
 DB $66,$4C,$19,$33,$19,$33,$66,$4C
 DB $E6,$CC,$99,$B3,$99,$B3,$E6,$CC
 DB $33,$66,$4C,$19,$4C,$19,$33,$66
 DB $B3,$E6,$CC,$99,$CC,$99,$B3,$E6
;
FAM0 DS 1
FAM1 DS 1
FAM2 DS 1
;
;COLORS ARE:
;   0 - BLACK W/ MSB OFF
;   1 - BLACK W/ MSB ON
;   2 - WHITE W/ MSB OFF
;   3 - WHITE W/ MSB ON
;   4 - GREEN
;   5 - RED
;   6 - BLUE
;   7 - BLUE GREY
;   8 - LIGHT BROWN
;   9 - PURPLE
;  10 - DARK GREEN
;  11 - BROWN
;  12 - DARK PURPLE
;  13 - DARK GREY
;  14 - LIGHT GREEN
;  15 - PINK/ORANGE
;  16 - LIGHT PURPLE
;  17 - LIGHT BLUE
;  18 - BLUE GREY
;  19 - DARK GREEN/YELLOW
;  20 - BRONZE
;  21 - PURPLE GREY
#
