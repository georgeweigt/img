FUNCTION GETDIR(VAR DIRNAME:PATHSTRING; VAR LISTPTR:FILEPOINTER):INTEGER;
VAR RESULT:INTEGER;
BEGIN
#A
 STX _T
 LDY #9         ;LISTPTR
 LDA (_SP),Y
 STA LISTPTR
 STA LINKPTR
 INY
 LDA (_SP),Y
 STA LISTPTR+1
 STA LINKPTR+1
 LDA #0
 TAY
 STA (LISTPTR),Y ;INIT LISTPTR TO NIL
 INY
 STA (LISTPTR),Y
 LDY #11        ;ADDRESS OF PATHNAME
 JSR MAKEPATH
 LDA _T+2
 STA UTLPRO_XTRA+1
 LDA _T+3
 STA UTLPRO_XTRA+2
 LDA #10
 STA UTLPRO_XTRA
 JSR _MLI
 DB  $C4        ;GET_FILE_INFO
 DW  UTLPRO_XTRA
 BNE GTD9
 LDA UTLPRO_XTRA+4
 CMP #15        ;DIR?
 BEQ GTD10
 LDA #$4B       ;INCOMPATIBLE FILE FORMAT
GTD9 EQU *
 PHA
 JSR RESTPATH
 PLA
 LDY #5
 STA (_SP),Y
 INY
 LDA #0
 STA (_SP),Y
 LDX _T
#
 GETDIR := RESULT
END;
#A
;
ENTRYLEN DS 1
EPERBLK  DS 1
FICOUNT  DS 2
BLKENTRY DS 1
ENTRYPTR EQU _T+4
RECPTR   EQU _T+6
LISTPTR  EQU _T+8
BUFPTR   EQU _T+10
LINKPTR  EQU _T+12
;
GTD10 EQU *
 LDA #3
 STA UTLPRO_XTRA
 JSR FIND_OPEN
 STA UTLPRO_XTRA+3
 STY UTLPRO_XTRA+4
 JSR _MLI
 DB  $C8        ;OPEN
 DW  UTLPRO_XTRA
 BNE GTD9
 LDA UTLPRO_XTRA+5
 STA GTDRDLIST+1 ;REFNUM
 JSR FIND_BUF
 STA GTDRDLIST+2
 STY GTDRDLIST+3
 STA BUFPTR
 STY BUFPTR+1
 JSR GTDRD
 LDY #$23
 LDA (BUFPTR),Y
 STA ENTRYLEN
 INY
 LDA (BUFPTR),Y
 STA EPERBLK
 INY
 LDA (BUFPTR),Y
 STA FICOUNT
 INY
 LDA (BUFPTR),Y
 STA FICOUNT+1
;
 CLC
 LDA BUFPTR
 ADC ENTRYLEN
 ADC #4
 STA ENTRYPTR
 LDA BUFPTR+1
 ADC #0
 STA ENTRYPTR+1
 LDY #1
 STY BLKENTRY
;
GTD1 EQU *
 LDA FICOUNT
 ORA FICOUNT+1
 BEQ GTD5
 LDA BLKENTRY
 CMP EPERBLK
 BNE GTD2
 JSR GTDRD
 LDA #0
 STA BLKENTRY
 LDA BUFPTR
 ADC #4
 STA ENTRYPTR
 LDA BUFPTR+1
 ADC #0
 STA ENTRYPTR+1
;
GTD2 EQU *
 LDY #0
 LDA (ENTRYPTR),Y
 AND #15
 BEQ GTD3
 JSR GTDINSERT
;
 LDA FICOUNT
 BNE *+5
 DEC FICOUNT+1
 DEC FICOUNT
;
GTD3 EQU *
 INC BLKENTRY
 CLC
 LDA ENTRYPTR
 ADC ENTRYLEN
 STA ENTRYPTR
 LDA ENTRYPTR+1
 ADC #0
 STA ENTRYPTR+1
 JMP GTD1
;
GTD5 EQU *      ;NO ERROR
 LDA #0
GTD4 EQU *
 PHA
 LDA UTLPRO_XTRA+5
 JSR CLOSE_FILE
 JSR FREE_OPEN
 JSR FREE_READ
 PLA
 JMP GTD9
;
GTDRD EQU *
 JSR _MLI
 DB  $CA        ;READ
 DW  GTDRDLIST
 BNE GTD4
 RTS
;
GTDRDLIST EQU *
 DB 4,0
 DW 0,512,0
;
GTDINSERT EQU *
 LDA ENTRYPTR+1
 PHA
 LDA ENTRYPTR
 PHA
 LDA BUFPTR+1
 PHA
 LDA BUFPTR
 PHA
 LDX _T
 DEX
 DEX
 LDA #>RECPTR
 STA 0,X
 LDA #<RECPTR
 STA 1,X
 LDA #>18
 LDY #<18
 JSR _LIB+$117
 STX _T
 PLA
 STA BUFPTR
 PLA
 STA BUFPTR+1
 PLA
 STA ENTRYPTR
 PLA
 STA ENTRYPTR+1
;
 LDY #0         ;POINT LAST LINK FIELD TO NEW NODE
 LDA RECPTR
 STA (LINKPTR),Y
 INY
 LDA RECPTR+1
 STA (LINKPTR),Y
 DEY
 LDA (ENTRYPTR),Y
 AND #15        ;LENGTH 1..15
 PHA
 TAY
GTDI2 LDA (ENTRYPTR),Y
 DEY
 STA (RECPTR),Y
 CPY #0
 BNE GTDI2
 PLA
 TAY
 LDA #$20       ;BUFFER WITH SPACES
GTDI3 STA (RECPTR),Y
 INY
 CPY #16
 BNE GTDI3
 LDA #0         ;SET NODE'S LINKPTR TO NIL
 STA (RECPTR),Y
 INY
 STA (RECPTR),Y
;
 CLC            ;CALC LINKPTR ADDRESS
 LDA RECPTR
 ADC #16
 STA LINKPTR
 LDA RECPTR+1
 ADC #0
 STA LINKPTR+1
 RTS
;
;
;
 IFNDEF UTLPRO_XTRA
UTLPRO_XTRA DS 20
 ENDIF
;
;
;
 IFNDEF FIND_OPEN
FIND_OPEN EQU * ;ALLOCATE OPEN FILE BUFFER
 LDX _T
 DEX
 DEX
 LDA #>OPENSAFE
 STA 0,X
 LDA #<OPENSAFE
 STA 1,X
 LDA #>1279
 LDY #<1279
 JSR _LIB+$117
 LDA OPENSAFE+1
 STA OPENADR+1
 LDA OPENSAFE
 STA OPENADR
 BEQ ALCOP9     ;BUFFER ON PAGE BOUNDARY
 INC OPENADR+1
 LDA #0
 STA OPENADR
ALCOP9 EQU *    ;A IS ALWAYS ZERO
 LDY OPENADR+1
 STX _T
 RTS            ;RETURN WITH BUFFER @(A,Y)
OPENADR  DW 0   ;ADDRESS OF BUFFER ON PAGE BOUNDARY
OPENSAFE DW 0   ;ADDRESS OF ACTUAL BUFFER START FOR DISPOSE
;
FREE_OPEN EQU *  ;FREE OPEN BUFFER FROM GLOBAL
 LDX _T
 DEX
 DEX
 LDA #>OPENSAFE
 STA 0,X
 LDA #<OPENSAFE
 STA 1,X
 JSR _LIB+$114
 STX _T
 RTS
;
CLOSE_FILE EQU *
 STA CL_XTRA+1
 JSR _MLI
 DB  $CC
 DW  CL_XTRA
 RTS
CL_XTRA DB 1,0
 ENDIF
;
;
;
;
 IFNDEF FIND_BUF
FIND_BUF EQU * ;ALLOCATE 512 BYTE READ/WRITE BUFFER
 LDX _T
 DEX
 DEX
 LDA #>READADR
 STA 0,X
 LDA #<READADR
 STA 1,X
 LDA #>512
 LDY #<512
 JSR _LIB+$117
 LDA READADR
 LDY READADR+1  ;BUFFER ADDRESS @ (A,Y)
 STX _T
 RTS
READADR DW 0
;
FREE_READ EQU *  ;FREE R/W BUFFER FROM GLOBAL
 LDX _T
 DEX
 DEX
 LDA #>READADR
 STA 0,X
 LDA #<READADR
 STA 1,X
 JSR _LIB+$114
 STX _T
 RTS
 ENDIF
;
;
;
 IFNDEF MAKEPATH
MAKEPATH EQU *
 LDA (_SP),Y    ;ADDRESS OF STRING ADDRESS
 STA _T+2
 INY
 LDA (_SP),Y
 STA _T+3
 LDY #64
MPTH1 LDA (_T+2),Y
 CMP #$20       ;SPACE?
 BNE MPTH2      ;NO. FOUND LAST CHAR OF PATHNAME
 DEY
 BPL MPTH1
 INY            ;Y=0
 TYA
 STA (_T+2),Y   ;MAKE LENGTH ZERO
 RTS
MPTH2 INY       ;PATH LENGTH
 STY PLENX
 DEY
MPTH3 LDA (_T+2),Y
 INY
 STA (_T+2),Y    ;MOVE STRING FORWARD ONE BYTE
 DEY
 DEY
 BPL MPTH3
 INY            ;Y=0
 LDA PLENX
 STA (_T+2),Y
 RTS
PLENX DS 1
 ENDIF
;
 IFNDEF RESTPATH
RESTPATH EQU *  ;RESTORE PATH @(_T+2)
 LDY #0
 LDA (_T+2),Y   ;LENGTH
 STA PLENX
 INY
RPTH1 LDA (_T+2),Y
 DEY
 STA (_T+2),Y   ;MOVE STRING BACK ONE BYTE
 INY
 INY
 DEC PLENX
 BPL RPTH1
 RTS
 ENDIF
#
