PROCEDURE BARCHART(BASEPTR:GRRECPTR);
VAR WALKER              :GRRECPTR;
    NODECOUNT,BARWIDTH,
    IMINVALUE,IMAXVALUE,
    LEFT,RIGHT,TOP,J,
    VALUERANGE,YSCALE   :INTEGER;
    RMINVALUE,RMAXVALUE :REAL;
    TAG                 :GRTAGTYPE;
    BARCOLOR            :COLORTYPE;
    VALIDCOLORS         :SET OF COLORTYPE;

BEGIN
   VALIDCOLORS := [GREEN,VIOLET,RED,BLUE,WHITE];
   NODECOUNT:=0; WALKER:=BASEPTR;
   WHILE (WALKER<>NIL) DO
   BEGIN
      NODECOUNT:=NODECOUNT+1;
      WALKER := WALKER^.NEXTGRREC
   END;
   INITTURTLE;
   IF (NODECOUNT <> 0) THEN
   BEGIN
      TAG      := BASEPTR^.GRTAG;
      BARWIDTH := 280 DIV NODECOUNT;
      IF TAG = INTDATA THEN
      BEGIN
         IMINVALUE:=BASEPTR^.GRNUMBER;
         IMAXVALUE:=IMINVALUE
      END
      ELSE
      BEGIN
         RMAXVALUE:=BASEPTR^.GRFLOAT;
         RMINVALUE:=RMAXVALUE
      END;
      WALKER:=BASEPTR;
      WHILE (WALKER<>NIL) DO
      BEGIN
      IF (TAG = INTDATA)
      THEN BEGIN
         IF WALKER^.GRNUMBER < IMINVALUE THEN IMINVALUE:=WALKER^.GRNUMBER
         ELSE
         IF WALKER^.GRNUMBER > IMAXVALUE THEN IMAXVALUE:=WALKER^.GRNUMBER END
      ELSE BEGIN
         IF WALKER^.GRFLOAT  < RMINVALUE THEN RMINVALUE:=WALKER^.GRFLOAT
         ELSE
         IF WALKER^.GRFLOAT  > RMAXVALUE THEN RMAXVALUE:=WALKER^.GRFLOAT END;
         WALKER:=WALKER^.NEXTGRREC
      END;
      IF (TAG=INTDATA) THEN VALUERANGE:=ABS(IMINVALUE)+ABS(IMAXVALUE)
      ELSE VALUERANGE:=TRUNC(ABS(RMINVALUE)+ABS(RMAXVALUE));
      YSCALE:=192 DIV VALUERANGE;
      BARCOLOR:=GREEN;
      WALKER:=BASEPTR;
      FOR J:=1 TO NODECOUNT DO
      BEGIN
         IF (TAG=INTDATA) THEN TOP:=191-(WALKER^.GRNUMBER*YSCALE)
                          ELSE TOP:=191-TRUNC(WALKER^.GRFLOAT*YSCALE);
         LEFT  :=  (J-1)*BARWIDTH;
         RIGHT :=  LEFT+BARWIDTH-1;
         VIEWPORT(LEFT,RIGHT,TOP,191);
         FILLPORT(BARCOLOR);
         WALKER:=WALKER^.NEXTGRREC;
         REPEAT
            BARCOLOR:=SUCC(BARCOLOR);
            IF BARCOLOR=NONE THEN BARCOLOR:=GREEN
         UNTIL BARCOLOR IN VALIDCOLORS
      END;
      FULLPORT;
   END
END;

PROCEDURE PIECHART(BASEPTR:GRRECPTR);
CONST
   RADIUS  =  90;
   XCENTER = 139;
   YCENTER =  95;
   CIRCANG =  10;
   LINEINC =  15;
VAR
    WALKER              :GRRECPTR;
    RTOTAL              :REAL;
    TOTALANG,PARTANG,
    ITOTAL,NODECOUNT,J  :INTEGER;
    TAG                 :GRTAGTYPE;
BEGIN
   NODECOUNT:=0; WALKER:=BASEPTR;
   WHILE (WALKER<>NIL) DO
   BEGIN
      NODECOUNT:=NODECOUNT+1;
      WALKER := WALKER^.NEXTGRREC
   END;
   INITTURTLE;
   IF (NODECOUNT <> 0) THEN
   BEGIN
      TAG      := BASEPTR^.GRTAG;
      RTOTAL := 0.0;
      ITOTAL := 0;
      WALKER:=BASEPTR;
      WHILE (WALKER<>NIL) DO
      BEGIN
         IF (TAG = INTDATA) THEN ITOTAL:=ITOTAL+WALKER^.GRNUMBER
                            ELSE RTOTAL:=RTOTAL+WALKER^.GRFLOAT;
         WALKER:=WALKER^.NEXTGRREC
      END;
      WALKER:=BASEPTR;
      MOVETO(XCENTER-(LINEINC DIV 2),YCENTER-RADIUS);
      PENCOLOR(WHITE1);
      FOR J:=1 TO (360 DIV CIRCANG) DO
      BEGIN
         MOVE(LINEINC);
         TURN(-CIRCANG)
      END;
      IF NODECOUNT > 1 THEN
      BEGIN
         PENCOLOR(NONE); MOVETO(XCENTER,YCENTER);
         TURNTO(0); PENCOLOR(WHITE1); MOVE(RADIUS-(LINEINC DIV 2));
         TOTALANG:=0;
         WHILE (WALKER^.NEXTGRREC<>NIL) DO
         BEGIN
            IF (TAG=INTDATA) THEN
               PARTANG:=ROUND(360*(WALKER^.GRNUMBER/ITOTAL))
            ELSE
               PARTANG:=ROUND(360*(WALKER^.GRFLOAT/RTOTAL));
            TOTALANG:=TOTALANG+PARTANG;
            PENCOLOR(NONE);   MOVETO(XCENTER,YCENTER);
            PENCOLOR(WHITE1); TURNTO(TOTALANG); MOVE(RADIUS-(LINEINC DIV 2));
            WALKER:=WALKER^.NEXTGRREC
         END;
      END
   END
END;

PROCEDURE XYPLOT(BASEPTR:GRRECPTR; DRAWAXES,CONNECTPOINTS:BOOLEAN);
VAR WALKER              :GRRECPTR;
    TAG                 :GRTAGTYPE;
    RMINVALUE,RMAXVALUE :REAL;
    YORG,NODECOUNT,J,
    XSCALE,YSCALE,XD,YD,
    IMINVALUE,IMAXVALUE,
    VALUERANGE          :INTEGER;
BEGIN
   NODECOUNT:=0; WALKER:=BASEPTR;
   WHILE (WALKER<>NIL) DO
   BEGIN
      NODECOUNT:=NODECOUNT+1;
      WALKER := WALKER^.NEXTGRREC
   END;
   INITTURTLE;
   IF (NODECOUNT <> 0) THEN
   BEGIN
      TAG      := BASEPTR^.GRTAG;
      IF TAG = INTDATA THEN
      BEGIN
         IMINVALUE:=BASEPTR^.GRNUMBER;
         IMAXVALUE:=IMINVALUE
      END
      ELSE
      BEGIN
         RMAXVALUE:=BASEPTR^.GRFLOAT;
         RMINVALUE:=RMAXVALUE
      END;
      WALKER:=BASEPTR;
      WHILE (WALKER<>NIL) DO
      BEGIN
      IF (TAG = INTDATA)
      THEN BEGIN
         IF WALKER^.GRNUMBER < IMINVALUE THEN IMINVALUE:=WALKER^.GRNUMBER
         ELSE
         IF WALKER^.GRNUMBER > IMAXVALUE THEN IMAXVALUE:=WALKER^.GRNUMBER END
      ELSE BEGIN
         IF WALKER^.GRFLOAT  < RMINVALUE THEN RMINVALUE:=WALKER^.GRFLOAT
         ELSE
         IF WALKER^.GRFLOAT  > RMAXVALUE THEN RMAXVALUE:=WALKER^.GRFLOAT END;
         WALKER:=WALKER^.NEXTGRREC
      END;
      IF (TAG=INTDATA) THEN VALUERANGE:=ABS(IMINVALUE)+ABS(IMAXVALUE)
      ELSE VALUERANGE:=TRUNC(ABS(RMINVALUE)+ABS(RMAXVALUE));
      XSCALE:=279 DIV NODECOUNT;
      YSCALE:=191 DIV VALUERANGE;
      IF TAG=INTDATA THEN
      BEGIN
         IF IMINVALUE>0 THEN IMINVALUE:=0;
         YORG:=191-(YSCALE*ABS(IMINVALUE))
      END ELSE
      BEGIN
         IF RMINVALUE>0 THEN RMINVALUE:=0;
         YORG:=191-TRUNC(YSCALE*ABS(RMINVALUE))
      END;
      IF DRAWAXES THEN
      BEGIN
         MOVETO(0,YORG);
         PENCOLOR(WHITE1); MOVETO(279,YORG);
         PENCOLOR(NONE);   MOVETO(0,YORG);
         PENCOLOR(WHITE1); MOVETO(0,0); MOVETO(0,191)
      END;
      PENCOLOR(WHITE);
      WALKER:=BASEPTR;
      FOR J:=1 TO NODECOUNT DO
      BEGIN
         IF TAG=INTDATA THEN YD:=YORG-WALKER^.GRNUMBER*YSCALE
                        ELSE YD:=YORG-ROUND(WALKER^.GRFLOAT*YSCALE);
         XD:=(J-1)*XSCALE;
         IF (NOT CONNECTPOINTS) OR ((CONNECTPOINTS) AND (J=1)) THEN
         BEGIN
            PENCOLOR(NONE);
            MOVETO(XD,YD);
            PENCOLOR(WHITE);
            MOVETO(XD,YD-1)
         END
         ELSE MOVETO(XD,YD);
         WALKER:=WALKER^.NEXTGRREC
      END
   END
END;

