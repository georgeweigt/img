#A
_USESHIRES
#

PROGRAM CHART_DEMO;

(* CHART DEMONSTRATION PROGRAM FOR USE
   WITH THE TURTLEGRAPHICS TOOLKIT

      COPYRIGHT (C) 1986 BY
       KYAN SOFTWARE, INC.      *)

TYPE
#I TURTLE.TYPES.I
#I CHART.TYPES.I

VAR
   OPTION       : CHAR;
   BASE         : GRRECPTR;

#I INITTURTLE.I
#I VIEWPORT.I
#I FULLPORT.I
#I FILLPORT.I
#I PENCOLOR.I
#I TURTLEX.I
#I TURTLEY.I
#I TURTLEANG.I
#I TURNTO.I
#I TURN.I
#I MOVETO.I
#I MOVE.I
#I TEXTMODE.I

#I BARCHART.I
#I PIECHART.I
#I XYPLOT.I


PROCEDURE HOME;
BEGIN
#A
 STX _T
 JSR $FC58
 LDX _T
#
END;

PROCEDURE UPCASE(VAR CH:CHAR);
BEGIN
   IF CH IN ['a'..'z'] THEN CH:=CHR(ORD(CH)-32)
END;

PROCEDURE BUILD_GRAF_LIST(VAR BASEPOINTER:GRRECPTR);
VAR TRAILER,LEADER:GRRECPTR;
    DATATYPE      :GRTAGTYPE;
    CH            :CHAR;
    INUMBER       :INTEGER;
    RNUMBER       :REAL;
    DONE          :BOOLEAN;
BEGIN
   HOME;
   BASEPOINTER:=NIL;
   WRITELN('***** CONTRUCT DATA LIST *****');
   WRITELN;
   REPEAT
      WRITE('WHAT DATA TYPE? (R=REAL,I=INT) --> ');
      READLN(CH); UPCASE(CH)
   UNTIL CH IN ['R','I'];
   IF CH='R' THEN DATATYPE:=REALDATA ELSE DATATYPE:=INTDATA;
   WRITELN;
   WRITELN('ENTER VALUE FOR EACH NODE <0=DONE> '); RNUMBER:=1.0; INUMBER:=1;
   WHILE (RNUMBER<>0.0) AND (INUMBER<>0) DO
   BEGIN
      IF DATATYPE=INTDATA THEN READLN(INUMBER) ELSE READLN(RNUMBER);
      IF (RNUMBER<>0.0) AND (INUMBER<>0) THEN BEGIN
      NEW(LEADER);
      LEADER^.NEXTGRREC:=NIL;
      LEADER^.GRTAG    :=DATATYPE;
      IF DATATYPE=INTDATA
      THEN LEADER^.GRNUMBER:=INUMBER
      ELSE LEADER^.GRFLOAT :=RNUMBER;
      IF BASEPOINTER=NIL THEN BASEPOINTER:=LEADER
                         ELSE TRAILER^.NEXTGRREC:=LEADER;
      TRAILER:=LEADER END;
   END
END;

PROCEDURE MENU;
BEGIN
   REPEAT
      HOME;
      WRITELN('**************************');
      WRITELN('*                        *');
      WRITELN('*   CHART DEMO PROGRAM   *');
      WRITELN('*                        *');
      WRITELN('**************************');
      WRITELN; WRITELN;
      WRITELN('OPTIONS:'); WRITELN; WRITELN;
      WRITELN('   < C >  CONTRUCT DATA LIST'); WRITELN;
      WRITELN('   < B >  BAR CHART'); WRITELN;
      WRITELN('   < P >  PIE CHART'); WRITELN;
      WRITELN('   < X >  X-Y PLOT');  WRITELN;
      WRITELN('   < Q >  QUIT'); WRITELN; WRITELN;
      WRITE('CHOICE? ');
      READLN(OPTION); UPCASE(OPTION)
   UNTIL OPTION IN ['C','B','P','X','Q']
END;

PROCEDURE MAKE_LIST;
VAR TRAILER,LEADER:GRRECPTR;
BEGIN
   LEADER:=BASE;
   WHILE (LEADER<>NIL) DO
   BEGIN
      TRAILER:=LEADER^.NEXTGRREC;
      DISPOSE(LEADER);
      LEADER :=TRAILER
   END;
   BUILD_GRAF_LIST(BASE)
END;

PROCEDURE READY_XYPLOT;
VAR CH:CHAR;
    DRAWAX,CONNECT:BOOLEAN;
BEGIN
   WRITELN('WHEN VIEWING GRAPH:');
   REPEAT
      WRITE('DRAW AXES? (Y/N) ');
      READLN(CH); UPCASE(CH)
   UNTIL CH IN ['Y','N'];
   DRAWAX:=(CH='Y');
   REPEAT
      WRITE('CONNECT POINTS? (Y/N) ');
      READLN(CH); UPCASE(CH)
   UNTIL CH IN ['Y','N'];
   CONNECT:=(CH='Y');
   XYPLOT(BASE,DRAWAX,CONNECT)
END;

PROCEDURE DO_CHART;
BEGIN
   WRITELN('PRESS RETURN TO VIEW CHART...');
   WRITE('PRESS RETURN AGAIN FOR MENU...');
   READLN;
   IF OPTION='B' THEN BARCHART(BASE) ELSE
   IF OPTION='P' THEN PIECHART(BASE) ELSE
   IF OPTION='X' THEN READY_XYPLOT;
END;

BEGIN (* MAIN *)
   BASE:=NIL;
   REPEAT
      MENU;
      IF OPTION='C' THEN MAKE_LIST
      ELSE
      IF (OPTION<>'Q') THEN
      BEGIN
         IF BASE=NIL THEN
         BEGIN
            WRITE('NO DATA DEFINED....PRESS RETURN');
            READLN
         END
         ELSE
         BEGIN
            DO_CHART;
            READLN;
            TEXTMODE
         END
      END
   UNTIL OPTION='Q';
   HOME
END.
